function solve(){let e=!1;do{for(e=!1,i=1;i<=9;i++)for(j=1;j<=9;j++)isSolved(i,j)&&eliminateCorrespondingCandidates(i,j);for(i=1;i<=9;i++)for(j=1;j<=9;j++)isSolved(i,j)||(trySolveForSingleCandidate(i,j),!e&&isSolved(i,j)&&(e=!0));console.log("Loop complete!  hasBeenSolved is: "+e)}while(e)}function eliminateCorrespondingCandidates(e,t){let a=document.querySelector('[data-row="'+e+'"][data-col="'+t+'"]'),o=a.value,d=a.parentElement.children;Array.from(d).filter(e=>!isSolved(e.dataset.row,e.dataset.col)).forEach(function(e){removeCandidate(parseInt(e.dataset.row),parseInt(e.dataset.col),parseInt(o))});let n=document.querySelectorAll('[data-row="'+e+'"]');Array.from(n).filter(e=>!isSolved(e.dataset.row,e.dataset.col)).forEach(function(e){removeCandidate(parseInt(e.dataset.row),parseInt(e.dataset.col),parseInt(o))})}function removeCandidate(e,t,a){let o=document.querySelector('[data-row="'+e+'"][data-col="'+t+'"]'),d=JSON.parse(o.dataset.candidates);d=d.filter(e=>e!==a);let n=JSON.stringify(d);document.querySelector('[data-row="'+e+'"][data-col="'+t+'"]').dataset.candidates=n,console.log(a+" removed from "+e+":"+t)}function trySolveForSingleCandidate(e,t){let a=document.querySelector('[data-row="'+e+'"][data-col="'+t+'"]');return candidates=JSON.parse(a.dataset.candidates),1==candidates.length&&(document.querySelector('[data-row="'+e+'"][data-col="'+t+'"]').value=candidates[0],!0)}function isSolved(e,t){return!!document.querySelector('[data-row="'+e+'"][data-col="'+t+'"]').value}document.getElementById("solve").addEventListener("click",solve),document.querySelectorAll("input[type=number]").forEach(function(e){e.addEventListener("change",function(){this.dataset.candidates="["+this.value+"]",console.log(this)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
